// @import '~@angular/material/theming';
@import '../node_modules/@angular/material/_theming.scss';
@include mat-core();

@mixin item-raised($zIndex: 2) {
  &.raised {
    @include mat-elevation-transition;
    @include mat-elevation($zIndex)
  }
}

@mixin content-color($palette) {
  background: mat-color($palette);
  color: mat-color($palette, default-contrast);
}

@mixin item-color-theme($color, $zValue: null) {
  color: mat-color($color);
  &.content {
    @include content-color($color);
    @include item-raised()
  }
}

@mixin color-theme($theme) {
  $config: mat-typography-config();
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);
  $theme-color: mat-color($foreground, text);
  $header-border: 1px solid mat-color($foreground, divider);
  font-family: mat-font-family($config);
  color: $theme-color;
  font-size: mat-font-size($config, body-1);
  .header-border {
    border: $header-border;
  }
  .content,
  &.content {
    background-color: mat-color($background, card);
    @include item-raised()
  }
  .primary,
  &.primary {
    @include item-color-theme($primary)
  }
  .accent,
  &.accent {
    @include item-color-theme($accent)
  }
  .warn,
  &.warn {
    @include item-color-theme($warn)
  }
  .tool-bar,
  &.tool-bar {
    background: mat-color($background, app-bar);
    &.primary {
      @include content-color($primary)
    }
    &.accent {
      @include content-color($accent)
    }
    &.warn {
      @include content-color($warn)
    }
  }
}

@mixin side-nav-override() {
  .mat-drawer-container,
  .mat-drawer-backdrop.mat-drawer-shown {
    background-color: transparent;
  }
}

@mixin create-mat-theme($theme) {
  @include angular-material-theme($theme);
  @include side-nav-override();
  .mat-tab-header-center .mat-tab-labels {
    justify-content: center;
  }
}
$light: mat-light-theme( 
  mat-palette($mat-indigo), 
  mat-palette($mat-blue-grey), 
  mat-palette($mat-orange)
);

@include create-mat-theme($light);

.light,
.dark .light,
.light .dark .light,
.dark .light .dark .light {
  @include create-mat-theme($light)
}

.k-light,
.k-dark .k-light,
.k-light .k-dark .k-light,
.k-dark .k-light .k-dark .k-light {
  @include color-theme($light)
}

$dark: mat-dark-theme( 
  mat-palette($mat-light-blue), 
  mat-palette($mat-amber), 
  mat-palette($mat-deep-orange)
);

.dark,
.light .dark,
.dark .light .dark,
.light .dark .light .dark {
  @include create-mat-theme($dark);
}

.k-dark,
.k-light .k-dark,
.k-dark .k-light .k-dark,
.k-light .k-dark .k-light .k-dark {
  @include color-theme($dark);
}


body,
html {
  padding: 0;
  margin: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

$menu-gap-xs: 3;
$menu-gap-sm: 5;
$menu-gap-md: 6;
$menu-gap-lg: 8;
$menu-font-size-xs: 16;
$menu-font-size-sm: 20;
$menu-font-size-md: 24;
$menu-font-size-lg: 30;
$menu-item-mb: .5em;
// slider
$slider-duration :350ms;
$slider-property :transform;
.slider {
  transition: none;
}

.slider.slider-left {
  transform: translateX(-100%);
}

%slider-shared {
  transition-property: $slider-property;
  transition-duration: $slider-duration;
}

.slider.slider-left.in {
  @extend %slider-shared;
  transform: translateX(0%);
}

.slider.slider-left.out {
  @extend %slider-shared;
  transform: translateX(-100%);
}

.flex-col-center {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
}

@mixin menuBar ($width, $gap, $size) {
  font-size: ($size)+px;
  padding: ($gap)+px;
}

@mixin menuBarChildren ($gap) {
  margin-bottom: $menu-item-mb;
}

@mixin setMenu($gap, $size) {
  $offset-left: $size + $gap * 2;
  .menu-bar {
    @include menuBar($offset-left, $gap, $size);
  }
  .menu-bar>* {
    @include menuBarChildren($gap);
  }
  .menu-offset {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: ($offset-left)+px;
  }
}

// default
@include setMenu($menu-gap-md, $menu-font-size-md);
// xs
@media screen and (min-width: 0px) and (max-width: 599px) {
  @include setMenu($menu-gap-xs, $menu-font-size-xs);
}

// sm
@media screen and (min-width: 600px) and (max-width: 959px) {
  @include setMenu($menu-gap-sm, $menu-font-size-sm);
}

// md
@media screen and (min-width: 960px) and (max-width: 1279px) {
  @include setMenu($menu-gap-md, $menu-font-size-md);
}

// lg
@media screen and (min-width: 1280px) and (max-width: 5000px) {
  @include setMenu($menu-gap-lg, $menu-font-size-lg);
}
